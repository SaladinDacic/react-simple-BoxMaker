{"version":3,"sources":["Box.js","NewBoxForm.js","BoxList.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","className","style","width","this","height","backgroundColor","margin","keyForBox","React","Component","defaultProps","NewBoxForm","state","handleChange","bind","handleSubmit","evt","preventDefault","addNewBox","setState","target","name","value","onSubmit","htmlFor","onChange","id","type","BoxList","boxes","boxList","handleRemove","map","box","key","onClick","console","log","uuid","st","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13764a91.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Box.css\";\r\n\r\nclass Box extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  static defaultProps = {\r\n    width: 100,\r\n    height: 100,\r\n    backgroundColor: \"black\",\r\n  };\r\n  render() {\r\n    return <p key={this.props.keyForBox} className=\"Box\" style={{ width: this.props.width, height: this.props.height, backgroundColor: this.props.backgroundColor, margin: 0 }}></p>;\r\n  }\r\n}\r\n\r\nexport default Box;","import React, { Component } from 'react';\r\nimport \"./NewBoxForm.css\"\r\n\r\nclass NewBoxForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            width: 0,\r\n            height: 0,\r\n            backgroundColor: \"balck\"\r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        this.props.addNewBox(this.state)\r\n        // evt.stopPropagation();\r\n    }\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Form-body\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"width\">Width </label>\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        name=\"width\"\r\n                        // value=\"width\"\r\n                        id=\"width\"\r\n                        type=\"number\"\r\n                    />\r\n                    <label htmlFor=\"height\">height </label>\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        name=\"height\"\r\n                        // value=\"height\"\r\n                        id=\"height\"\r\n                        type=\"number\"\r\n                    />\r\n                    <label htmlFor=\"backgroundColor\">Background Color </label>\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        name=\"backgroundColor\"\r\n                        // value=\"backgroundColor\"\r\n                        id=\"backgroundColor\"\r\n                        type=\"text\"\r\n                    />\r\n                    <button>Submit!</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewBoxForm;","import React, { Component } from 'react';\r\nimport Box from \"./Box\";\r\nimport NewBoxForm from \"./NewBoxForm\";\r\nimport \"./BoxList.css\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nclass BoxList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            boxes: []\r\n        }\r\n        this.boxList = this.boxList.bind(this);\r\n        this.addNewBox = this.addNewBox.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n    }\r\n    boxList(){\r\n        return this.state.boxes.map(box=>{\r\n            return (\r\n              <div className=\"BoxList-box\">\r\n                <Box keyForBox={box.key} width={box.width} height={box.height} backgroundColor={box.backgroundColor} />\r\n                <button id={box.key} onClick={this.handleRemove}>\r\n                  Remove Box\r\n                </button>\r\n              </div>\r\n            );\r\n        })\r\n    }\r\n    addNewBox(evt){\r\n        console.log(evt)\r\n        let {width, height, backgroundColor} = evt;\r\n        width = +width;\r\n        height = +height;\r\n        let key = uuid()\r\n        if(backgroundColor == \"\"){\r\n            console.log(\"lala\")\r\n        }\r\n        this.setState(st=>{\r\n            return{boxes: [...st.boxes, {width, height, backgroundColor, key}]}\r\n        })\r\n    }\r\n    handleRemove(evt){\r\n        this.setState(st=>{\r\n            return{boxes: [...st.boxes].filter(box=>{return box.key !== evt.target.id})}\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"BoxList-body\">\r\n                <div >\r\n                    <NewBoxForm addNewBox={this.addNewBox}/>\r\n                </div>\r\n                <div >\r\n                    {this.boxList()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BoxList;","import BoxList from \"./BoxList\";\nimport './App.css';\nimport Box from \"./Box\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BoxList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}